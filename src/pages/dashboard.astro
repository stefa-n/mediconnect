---
import MainLayout from '../layouts/main.astro';
---

<MainLayout content={{ title: 'Dashboard - MediConnect' }}>
  <div class="min-h-screen bg-gradient-to-br from-primary/5 via-background to-secondary/5">
    <div class="container mx-auto px-4 py-8">
      <div id="auth-check" class="flex items-center justify-center min-h-screen">
        <div class="animate-pulse">Loading...</div>
      </div>

      <div id="dashboard-content" class="hidden">
        <!-- Header -->
        <div class="flex items-center justify-between mb-8">
          <div>
            <h1 class="text-4xl font-bold text-foreground mb-2">Dashboard</h1>
            <p class="text-muted-foreground" id="welcome-message">Welcome back!</p>
          </div>
          <button
            id="sign-out-btn"
            class="px-6 py-2 border-2 border-destructive text-destructive rounded-md hover:bg-destructive hover:text-destructive-foreground transition-all duration-200"
          >
            Sign Out
          </button>
        </div>

        <!-- User Info Card -->
        <div class="bg-card border-2 border-border rounded-lg shadow-lg p-8 mb-8">
          <h2 class="text-2xl font-bold mb-4">Account Information</h2>
          <div class="space-y-3">
            <div>
              <span class="text-muted-foreground">Name:</span>
              <span class="ml-2 font-semibold" id="user-name">-</span>
            </div>
            <div>
              <span class="text-muted-foreground">Email:</span>
              <span class="ml-2 font-semibold" id="user-email">-</span>
            </div>
            <div>
              <span class="text-muted-foreground">Role:</span>
              <span class="ml-2 font-semibold capitalize" id="user-role">-</span>
            </div>
            <div id="cnp-section" class="hidden">
              <span class="text-muted-foreground">CNP:</span>
              <span class="ml-2 font-semibold font-mono" id="user-cnp">-</span>
            </div>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="bg-card border-2 border-border rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
            <div class="w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center mb-4">
              <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
            </div>
            <h3 class="text-lg font-semibold mb-2">Appointments</h3>
            <p class="text-sm text-muted-foreground">View and manage your appointments</p>
          </div>

          <div class="bg-card border-2 border-border rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
            <div class="w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center mb-4">
              <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
            </div>
            <h3 class="text-lg font-semibold mb-2">Medical Records</h3>
            <p class="text-sm text-muted-foreground">Access your medical history</p>
          </div>

          <div class="bg-card border-2 border-border rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
            <div class="w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center mb-4">
              <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
              </svg>
            </div>
            <h3 class="text-lg font-semibold mb-2">AI Assistant</h3>
            <p class="text-sm text-muted-foreground">Chat with our medical AI</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    import { supabase } from '../lib/supabase';

    const authCheck = document.getElementById('auth-check');
    const dashboardContent = document.getElementById('dashboard-content');
    const signOutBtn = document.getElementById('sign-out-btn');
    const welcomeMessage = document.getElementById('welcome-message');
    const userName = document.getElementById('user-name');
    const userEmail = document.getElementById('user-email');
    const userRole = document.getElementById('user-role');
    const userCnp = document.getElementById('user-cnp');
    const cnpSection = document.getElementById('cnp-section');

    async function checkAuth() {
      try {
        const { data: { user }, error } = await supabase.auth.getUser();

        if (error || !user) {
          // Not authenticated, redirect to auth page
          window.location.href = '/auth';
          return;
        }

        // Fetch user profile
        const { data: profile, error: profileError } = await supabase
          .from('profiles')
          .select('*')
          .eq('id', user.id)
          .single();

        if (profileError) {
          console.error('Error fetching profile:', profileError);
        }

        // Display user info
        if (profile) {
          if (welcomeMessage && profile.full_name) {
            welcomeMessage.textContent = `Welcome back, ${profile.full_name}!`;
          }
          if (userName) {
            userName.textContent = profile.full_name || '-';
          }
          if (userRole) {
            userRole.textContent = profile.role.replace('_', ' ') || '-';
          }
          if (profile.cnp && userCnp && cnpSection) {
            userCnp.textContent = profile.cnp;
            cnpSection.classList.remove('hidden');
          }
        }

        if (userEmail) {
          userEmail.textContent = user.email || '-';
        }

        // Show dashboard
        authCheck?.classList.add('hidden');
        dashboardContent?.classList.remove('hidden');
      } catch (error) {
        console.error('Auth check error:', error);
        window.location.href = '/auth';
      }
    }

    // Sign out handler
    signOutBtn?.addEventListener('click', async () => {
      try {
        await supabase.auth.signOut();
        window.location.href = '/';
      } catch (error) {
        console.error('Sign out error:', error);
      }
    });

    // Check auth on page load
    checkAuth();
  </script>
</MainLayout>
